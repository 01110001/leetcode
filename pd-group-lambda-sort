import pandas as pd

def categorize_products(activities: pd.DataFrame) -> pd.DataFrame:
        # Group by sell_date
    grouped = activities.groupby('sell_date')
    
    # Compute the desired results per group and reset the index to make it a DataFrame
    result = (
        grouped
        .apply(lambda g: pd.Series({
            'num_sold': g['product'].nunique(),
            'products': ','.join(sorted(g['product'].unique()))
        }))
        .reset_index()
    )
    
    # Ensure the resulting DataFrame is ordered by sell_date
    result = result.sort_values('sell_date')
    
    return result


Write a solution to find for each date the number of different products sold and their names.

The sold products names for each date should be sorted lexicographically.

Return the result table ordered by sell_date.

The result format is in the following example.

 

Example 1:

Input: 
Activities table:
+------------+------------+
| sell_date  | product     |
+------------+------------+
| 2020-05-30 | Headphone  |
| 2020-06-01 | Pencil     |
| 2020-06-02 | Mask       |
| 2020-05-30 | Basketball |
| 2020-06-01 | Bible      |
| 2020-06-02 | Mask       |
| 2020-05-30 | T-Shirt    |
+------------+------------+
Output: 
+------------+----------+------------------------------+
| sell_date  | num_sold | products                     |
+------------+----------+------------------------------+
| 2020-05-30 | 3        | Basketball,Headphone,T-shirt |
| 2020-06-01 | 2        | Bible,Pencil                 |
| 2020-06-02 | 1        | Mask                         |
+------------+----------+------------------------------+
Explanation: 
For 2020-05-30, Sold items were (Headphone, Basketball, T-shirt), we sort them lexicographically and separate them by a comma.
For 2020-06-01, Sold items were (Pencil, Bible), we sort them lexicographically and separate them by a comma.
For 2020-06-02, the Sold item is (Mask), we just return it.
